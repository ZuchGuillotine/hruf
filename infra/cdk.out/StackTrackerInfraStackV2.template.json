{
 "Resources": {
  "StackTrackerVPC312672F2": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "stacktracker-vpc-v3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/Resource"
   }
  },
  "StackTrackerVPCPublicSubnet1Subnet9BAD6C9F": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-west-2a",
    "CidrBlock": "10.0.0.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "StackTrackerInfraStackV2/StackTrackerVPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "StackTrackerVPC312672F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/PublicSubnet1/Subnet"
   }
  },
  "StackTrackerVPCPublicSubnet1RouteTable4029C464": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "StackTrackerInfraStackV2/StackTrackerVPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "StackTrackerVPC312672F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/PublicSubnet1/RouteTable"
   }
  },
  "StackTrackerVPCPublicSubnet1RouteTableAssociation807324E8": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "StackTrackerVPCPublicSubnet1RouteTable4029C464"
    },
    "SubnetId": {
     "Ref": "StackTrackerVPCPublicSubnet1Subnet9BAD6C9F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/PublicSubnet1/RouteTableAssociation"
   }
  },
  "StackTrackerVPCPublicSubnet1DefaultRoute4DF85233": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "StackTrackerVPCIGWA6CDAC5D"
    },
    "RouteTableId": {
     "Ref": "StackTrackerVPCPublicSubnet1RouteTable4029C464"
    }
   },
   "DependsOn": [
    "StackTrackerVPCVPCGW9EA639BB"
   ],
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/PublicSubnet1/DefaultRoute"
   }
  },
  "StackTrackerVPCPublicSubnet1EIPD6E66E5D": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "StackTrackerInfraStackV2/StackTrackerVPC/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/PublicSubnet1/EIP"
   }
  },
  "StackTrackerVPCPublicSubnet1NATGateway0F64B4B5": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "StackTrackerVPCPublicSubnet1EIPD6E66E5D",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "StackTrackerVPCPublicSubnet1Subnet9BAD6C9F"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "StackTrackerInfraStackV2/StackTrackerVPC/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "StackTrackerVPCPublicSubnet1DefaultRoute4DF85233",
    "StackTrackerVPCPublicSubnet1RouteTableAssociation807324E8"
   ],
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/PublicSubnet1/NATGateway"
   }
  },
  "StackTrackerVPCPublicSubnet2SubnetDA60B8A7": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-west-2b",
    "CidrBlock": "10.0.1.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "StackTrackerInfraStackV2/StackTrackerVPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "StackTrackerVPC312672F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/PublicSubnet2/Subnet"
   }
  },
  "StackTrackerVPCPublicSubnet2RouteTable33828B7D": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "StackTrackerInfraStackV2/StackTrackerVPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "StackTrackerVPC312672F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/PublicSubnet2/RouteTable"
   }
  },
  "StackTrackerVPCPublicSubnet2RouteTableAssociation991C1B7C": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "StackTrackerVPCPublicSubnet2RouteTable33828B7D"
    },
    "SubnetId": {
     "Ref": "StackTrackerVPCPublicSubnet2SubnetDA60B8A7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/PublicSubnet2/RouteTableAssociation"
   }
  },
  "StackTrackerVPCPublicSubnet2DefaultRoute59941B3D": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "StackTrackerVPCIGWA6CDAC5D"
    },
    "RouteTableId": {
     "Ref": "StackTrackerVPCPublicSubnet2RouteTable33828B7D"
    }
   },
   "DependsOn": [
    "StackTrackerVPCVPCGW9EA639BB"
   ],
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/PublicSubnet2/DefaultRoute"
   }
  },
  "StackTrackerVPCPrivateSubnet1Subnet0B7C8E72": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-west-2a",
    "CidrBlock": "10.0.2.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "StackTrackerInfraStackV2/StackTrackerVPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "StackTrackerVPC312672F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/PrivateSubnet1/Subnet"
   }
  },
  "StackTrackerVPCPrivateSubnet1RouteTable71CCEAF6": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "StackTrackerInfraStackV2/StackTrackerVPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "StackTrackerVPC312672F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/PrivateSubnet1/RouteTable"
   }
  },
  "StackTrackerVPCPrivateSubnet1RouteTableAssociationDAF4DB30": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "StackTrackerVPCPrivateSubnet1RouteTable71CCEAF6"
    },
    "SubnetId": {
     "Ref": "StackTrackerVPCPrivateSubnet1Subnet0B7C8E72"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "StackTrackerVPCPrivateSubnet1DefaultRouteEFE2A2F3": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "StackTrackerVPCPublicSubnet1NATGateway0F64B4B5"
    },
    "RouteTableId": {
     "Ref": "StackTrackerVPCPrivateSubnet1RouteTable71CCEAF6"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/PrivateSubnet1/DefaultRoute"
   }
  },
  "StackTrackerVPCPrivateSubnet2Subnet0741B41F": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-west-2b",
    "CidrBlock": "10.0.3.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "StackTrackerInfraStackV2/StackTrackerVPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "StackTrackerVPC312672F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/PrivateSubnet2/Subnet"
   }
  },
  "StackTrackerVPCPrivateSubnet2RouteTableDD64BAE2": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "StackTrackerInfraStackV2/StackTrackerVPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "StackTrackerVPC312672F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/PrivateSubnet2/RouteTable"
   }
  },
  "StackTrackerVPCPrivateSubnet2RouteTableAssociation40036BFA": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "StackTrackerVPCPrivateSubnet2RouteTableDD64BAE2"
    },
    "SubnetId": {
     "Ref": "StackTrackerVPCPrivateSubnet2Subnet0741B41F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "StackTrackerVPCPrivateSubnet2DefaultRoute31EEA642": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "StackTrackerVPCPublicSubnet1NATGateway0F64B4B5"
    },
    "RouteTableId": {
     "Ref": "StackTrackerVPCPrivateSubnet2RouteTableDD64BAE2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/PrivateSubnet2/DefaultRoute"
   }
  },
  "StackTrackerVPCIsolatedSubnet1Subnet60779DEC": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-west-2a",
    "CidrBlock": "10.0.4.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Isolated"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Isolated"
     },
     {
      "Key": "Name",
      "Value": "StackTrackerInfraStackV2/StackTrackerVPC/IsolatedSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "StackTrackerVPC312672F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/IsolatedSubnet1/Subnet"
   }
  },
  "StackTrackerVPCIsolatedSubnet1RouteTableE447399C": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "StackTrackerInfraStackV2/StackTrackerVPC/IsolatedSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "StackTrackerVPC312672F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/IsolatedSubnet1/RouteTable"
   }
  },
  "StackTrackerVPCIsolatedSubnet1RouteTableAssociationD52D53F0": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "StackTrackerVPCIsolatedSubnet1RouteTableE447399C"
    },
    "SubnetId": {
     "Ref": "StackTrackerVPCIsolatedSubnet1Subnet60779DEC"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/IsolatedSubnet1/RouteTableAssociation"
   }
  },
  "StackTrackerVPCIsolatedSubnet2SubnetD3AAD45E": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-west-2b",
    "CidrBlock": "10.0.5.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Isolated"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Isolated"
     },
     {
      "Key": "Name",
      "Value": "StackTrackerInfraStackV2/StackTrackerVPC/IsolatedSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "StackTrackerVPC312672F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/IsolatedSubnet2/Subnet"
   }
  },
  "StackTrackerVPCIsolatedSubnet2RouteTableA0244AE7": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "StackTrackerInfraStackV2/StackTrackerVPC/IsolatedSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "StackTrackerVPC312672F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/IsolatedSubnet2/RouteTable"
   }
  },
  "StackTrackerVPCIsolatedSubnet2RouteTableAssociation83AB5911": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "StackTrackerVPCIsolatedSubnet2RouteTableA0244AE7"
    },
    "SubnetId": {
     "Ref": "StackTrackerVPCIsolatedSubnet2SubnetD3AAD45E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/IsolatedSubnet2/RouteTableAssociation"
   }
  },
  "StackTrackerVPCIGWA6CDAC5D": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "stacktracker-vpc-v3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/IGW"
   }
  },
  "StackTrackerVPCVPCGW9EA639BB": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "StackTrackerVPCIGWA6CDAC5D"
    },
    "VpcId": {
     "Ref": "StackTrackerVPC312672F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/VPCGW"
   }
  },
  "StackTrackerVPCRestrictDefaultSecurityGroupCustomResourceA76125A0": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "StackTrackerVPC312672F2",
      "DefaultSecurityGroup"
     ]
    },
    "Account": "881490119784"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "StackTrackerVPCSecretsManagerEndpointSecurityGroup388793BB": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "StackTrackerInfraStackV2/StackTrackerVPC/SecretsManagerEndpoint/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "StackTrackerVPC312672F2",
        "CidrBlock"
       ]
      },
      "Description": {
       "Fn::Join": [
        "",
        [
         "from ",
         {
          "Fn::GetAtt": [
           "StackTrackerVPC312672F2",
           "CidrBlock"
          ]
         },
         ":443"
        ]
       ]
      },
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "stacktracker-vpc-v3"
     }
    ],
    "VpcId": {
     "Ref": "StackTrackerVPC312672F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/SecretsManagerEndpoint/SecurityGroup/Resource"
   }
  },
  "StackTrackerVPCSecretsManagerEndpoint54590ACF": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "PrivateDnsEnabled": true,
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "StackTrackerVPCSecretsManagerEndpointSecurityGroup388793BB",
       "GroupId"
      ]
     }
    ],
    "ServiceName": "com.amazonaws.us-west-2.secretsmanager",
    "SubnetIds": [
     {
      "Ref": "StackTrackerVPCIsolatedSubnet1Subnet60779DEC"
     },
     {
      "Ref": "StackTrackerVPCIsolatedSubnet2SubnetD3AAD45E"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "stacktracker-vpc-v3"
     }
    ],
    "VpcEndpointType": "Interface",
    "VpcId": {
     "Ref": "StackTrackerVPC312672F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/SecretsManagerEndpoint/Resource"
   }
  },
  "StackTrackerVPCRDSEndpointSecurityGroup092E3F17": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "StackTrackerInfraStackV2/StackTrackerVPC/RDSEndpoint/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "StackTrackerVPC312672F2",
        "CidrBlock"
       ]
      },
      "Description": {
       "Fn::Join": [
        "",
        [
         "from ",
         {
          "Fn::GetAtt": [
           "StackTrackerVPC312672F2",
           "CidrBlock"
          ]
         },
         ":443"
        ]
       ]
      },
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "stacktracker-vpc-v3"
     }
    ],
    "VpcId": {
     "Ref": "StackTrackerVPC312672F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/RDSEndpoint/SecurityGroup/Resource"
   }
  },
  "StackTrackerVPCRDSEndpoint68256C0F": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "PrivateDnsEnabled": true,
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "StackTrackerVPCRDSEndpointSecurityGroup092E3F17",
       "GroupId"
      ]
     }
    ],
    "ServiceName": "com.amazonaws.us-west-2.rds",
    "SubnetIds": [
     {
      "Ref": "StackTrackerVPCIsolatedSubnet1Subnet60779DEC"
     },
     {
      "Ref": "StackTrackerVPCIsolatedSubnet2SubnetD3AAD45E"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "stacktracker-vpc-v3"
     }
    ],
    "VpcEndpointType": "Interface",
    "VpcId": {
     "Ref": "StackTrackerVPC312672F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/RDSEndpoint/Resource"
   }
  },
  "StackTrackerVPCS3Endpoint99BC131B": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "RouteTableIds": [
     {
      "Ref": "StackTrackerVPCIsolatedSubnet1RouteTableE447399C"
     },
     {
      "Ref": "StackTrackerVPCIsolatedSubnet2RouteTableA0244AE7"
     }
    ],
    "ServiceName": {
     "Fn::Join": [
      "",
      [
       "com.amazonaws.",
       {
        "Ref": "AWS::Region"
       },
       ".s3"
      ]
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "stacktracker-vpc-v3"
     }
    ],
    "VpcEndpointType": "Gateway",
    "VpcId": {
     "Ref": "StackTrackerVPC312672F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerVPC/S3Endpoint/Resource"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:aws:ec2:us-west-2:881490119784:security-group/",
             {
              "Fn::GetAtt": [
               "StackTrackerVPC312672F2",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-881490119784-us-west-2",
     "S3Key": "7fa1e366ee8a9ded01fc355f704cff92bfd179574e6f9cfee800a3541df1b200.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.7fa1e366ee8a9ded01fc355f704cff92bfd179574e6f9cfee800a3541df1b200",
    "aws:asset:property": "Code"
   }
  },
  "ApplicationSecurityGroup3903A0DC": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for StackTracker application",
    "GroupName": "stacktracker-app-sg-v3",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "StackTrackerVPC312672F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/ApplicationSecurityGroup/Resource"
   }
  },
  "DatabaseSecurityGroup7319C0F6": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for StackTracker RDS instance V3",
    "SecurityGroupEgress": [
     {
      "CidrIp": "255.255.255.255/32",
      "Description": "Disallow all traffic",
      "FromPort": 252,
      "IpProtocol": "icmp",
      "ToPort": 86
     }
    ],
    "VpcId": {
     "Ref": "StackTrackerVPC312672F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/DatabaseSecurityGroup/Resource"
   }
  },
  "DatabaseSecurityGroupfromStackTrackerInfraStackV2ApplicationSecurityGroup86DCADE45432E21C9F57": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Allow application to connect to database",
    "FromPort": 5432,
    "GroupId": {
     "Fn::GetAtt": [
      "DatabaseSecurityGroup7319C0F6",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "ApplicationSecurityGroup3903A0DC",
      "GroupId"
     ]
    },
    "ToPort": 5432
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/DatabaseSecurityGroup/from StackTrackerInfraStackV2ApplicationSecurityGroup86DCADE4:5432"
   }
  },
  "UploadsBucket5E5E9B64": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET",
        "POST",
        "PUT"
       ],
       "AllowedOrigins": [
        "*"
       ]
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/UploadsBucket/Resource"
   }
  },
  "TestInstanceRole5518C8D3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSSMManagedInstanceCore"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/TestInstanceRole/Resource"
   }
  },
  "TestInstanceRoleDefaultPolicyC7EABD87": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": "arn:aws:secretsmanager:us-west-2:881490119784:secret:stacktracker/db-credentials-v3-??????"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TestInstanceRoleDefaultPolicyC7EABD87",
    "Roles": [
     {
      "Ref": "TestInstanceRole5518C8D3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/TestInstanceRole/DefaultPolicy/Resource"
   }
  },
  "DatabaseTestInstanceInstanceProfileAB31C302": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "TestInstanceRole5518C8D3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/DatabaseTestInstance/InstanceProfile"
   }
  },
  "DatabaseTestInstance7AABCDB5": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": "us-west-2a",
    "IamInstanceProfile": {
     "Ref": "DatabaseTestInstanceInstanceProfileAB31C302"
    },
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61x8664C96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t3.micro",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "ApplicationSecurityGroup3903A0DC",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "StackTrackerVPCPrivateSubnet1Subnet0B7C8E72"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "StackTrackerInfraStackV2/DatabaseTestInstance"
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash\n#!/bin/bash\nset -e\nexec > >(tee /var/log/user-data.log) 2>&1\necho \"Starting user data script...\"\necho \"Updating system...\"\nyum update -y\necho \"Installing PostgreSQL and jq...\"\nyum install -y postgresql15 jq\necho \"Getting database credentials...\"\naws secretsmanager get-secret-value --secret-id stacktracker/db-credentials-v3 --query SecretString --output text > /tmp/db-creds.json\necho \"Setting up environment variables...\"\nexport PGPASSWORD=$(jq -r .password /tmp/db-creds.json)\nexport NEW_DB_HOST=stacktracker-migration-db.clcggkmq0zdo.us-west-2.rds.amazonaws.com\necho \"Testing new database connection...\"\necho \"NEW_DB_HOST: $NEW_DB_HOST\"\npsql -h $NEW_DB_HOST -U stacktracker_admin -d stacktracker -c \"SELECT version();\" || { echo \"New database connection failed!\"; exit 1; }\necho \"New database connection successful!\"\necho \"Cleaning up...\"\nrm /tmp/db-creds.json\necho \"User data script completed successfully.\""
    }
   },
   "DependsOn": [
    "TestInstanceRoleDefaultPolicyC7EABD87",
    "TestInstanceRole5518C8D3"
   ],
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/DatabaseTestInstance/Resource"
   }
  },
  "ElasticBeanstalkServiceRoleA03BC2E6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "elasticbeanstalk.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSElasticBeanstalkService"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/ElasticBeanstalkServiceRole/Resource"
   }
  },
  "ElasticBeanstalkInstanceRoleF8F2F8C4": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AWSElasticBeanstalkWebTier"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AWSElasticBeanstalkWorkerTier"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/ElasticBeanstalkInstanceRole/Resource"
   }
  },
  "ElasticBeanstalkInstanceRoleDefaultPolicyA6F02B5C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": "arn:aws:secretsmanager:us-west-2:881490119784:secret:stacktracker/db-credentials-v3-??????"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ElasticBeanstalkInstanceRoleDefaultPolicyA6F02B5C",
    "Roles": [
     {
      "Ref": "ElasticBeanstalkInstanceRoleF8F2F8C4"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/ElasticBeanstalkInstanceRole/DefaultPolicy/Resource"
   }
  },
  "ElasticBeanstalkInstanceProfile": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "ElasticBeanstalkInstanceRoleF8F2F8C4"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/ElasticBeanstalkInstanceProfile"
   }
  },
  "StackTrackerApplication": {
   "Type": "AWS::ElasticBeanstalk::Application",
   "Properties": {
    "ApplicationName": "stacktracker-app-v3",
    "Description": "StackTracker Web Application"
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerApplication"
   }
  },
  "StackTrackerEnvironment": {
   "Type": "AWS::ElasticBeanstalk::Environment",
   "Properties": {
    "ApplicationName": "stacktracker-app-v3",
    "EnvironmentName": "stacktracker-env-v3",
    "OptionSettings": [
     {
      "Namespace": "aws:ec2:vpc",
      "OptionName": "VPCId",
      "Value": {
       "Ref": "StackTrackerVPC312672F2"
      }
     },
     {
      "Namespace": "aws:ec2:vpc",
      "OptionName": "Subnets",
      "Value": {
       "Fn::Join": [
        "",
        [
         {
          "Ref": "StackTrackerVPCPrivateSubnet1Subnet0B7C8E72"
         },
         ",",
         {
          "Ref": "StackTrackerVPCPrivateSubnet2Subnet0741B41F"
         }
        ]
       ]
      }
     },
     {
      "Namespace": "aws:ec2:vpc",
      "OptionName": "ELBSubnets",
      "Value": {
       "Fn::Join": [
        "",
        [
         {
          "Ref": "StackTrackerVPCPublicSubnet1Subnet9BAD6C9F"
         },
         ",",
         {
          "Ref": "StackTrackerVPCPublicSubnet2SubnetDA60B8A7"
         }
        ]
       ]
      }
     },
     {
      "Namespace": "aws:autoscaling:launchconfiguration",
      "OptionName": "IamInstanceProfile",
      "Value": {
       "Ref": "ElasticBeanstalkInstanceProfile"
      }
     },
     {
      "Namespace": "aws:autoscaling:launchconfiguration",
      "OptionName": "SecurityGroups",
      "Value": {
       "Fn::GetAtt": [
        "ApplicationSecurityGroup3903A0DC",
        "GroupId"
       ]
      }
     },
     {
      "Namespace": "aws:autoscaling:launchconfiguration",
      "OptionName": "InstanceType",
      "Value": "t3.micro"
     },
     {
      "Namespace": "aws:elasticbeanstalk:application:environment",
      "OptionName": "RDS_HOST",
      "Value": "stacktracker-migration-db.clcggkmq0zdo.us-west-2.rds.amazonaws.com"
     },
     {
      "Namespace": "aws:elasticbeanstalk:application:environment",
      "OptionName": "RDS_PORT",
      "Value": "5432"
     },
     {
      "Namespace": "aws:elasticbeanstalk:application:environment",
      "OptionName": "RDS_DB_NAME",
      "Value": "stacktracker"
     },
     {
      "Namespace": "aws:elasticbeanstalk:application:environment",
      "OptionName": "RDS_SECRET_ARN",
      "Value": "arn:aws:secretsmanager:us-west-2:881490119784:secret:stacktracker/db-credentials-v3"
     },
     {
      "Namespace": "aws:elasticbeanstalk:application:environment",
      "OptionName": "S3_BUCKET",
      "Value": {
       "Ref": "UploadsBucket5E5E9B64"
      }
     },
     {
      "Namespace": "aws:elbv2:loadbalancer",
      "OptionName": "SecurityGroups",
      "Value": {
       "Fn::GetAtt": [
        "ApplicationSecurityGroup3903A0DC",
        "GroupId"
       ]
      }
     },
     {
      "Namespace": "aws:elasticbeanstalk:application",
      "OptionName": "Application Healthcheck URL",
      "Value": "/_health"
     }
    ],
    "SolutionStackName": "64bit Amazon Linux 2023 v4.5.2 running Docker"
   },
   "DependsOn": [
    "StackTrackerApplication"
   ],
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/StackTrackerEnvironment"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/+1X32/bOAz+W6bHQvWtHVBgeXPTogtwbYIk14cLgoGRmFSLLPn0w72ckf/9IEt23K0bOqxX5OGebFMi+ekjRdLn2dnHi+z9O3i0p4xvT6VYZfXMAdtSeLSfa2TnWX1fskVNqpLdQYFkQE4IJQX8nf9j04cCdwMOH2HXSqxfKXRDrdZi4w04oRUZLGrCBDe3YLedYmcwasx3ZRBM/EoKRvb05RpGVODwZ1RGVktwyMl+SQkqWEm8UvaTti5oWDJwxmNvZebLUhsX5fslHa7V/WRII9ZZY3lRE6hASFgJKdzuT61az1XJRjy9B3yXUrNtx2UZjYzKsfodvGIPrXNRVhfDr7aDtWKjRmV1kXNu0NqxGhpMHJOThoKjQNEA4fyuyw4yWJATsjwagMeBIqZSTKDwNtXe4Twk3UF+kOXWaiYaA93m8HI9moTHgWyarsSrZ+YapD0Czn8NxvEgORIYx4PkfxhHB6OpUCPl0Cjs6kvsf+krdw7YQ4HK0WbfGhjel+xa8VIL5eL80HZhNJVgSAY1KWONulL2CtfgpWtraa9px6bbsJEauA2q3+nlgbK3crWkM2TeCLe7MdqXvUOm1jdSm0Dn1EuM4w+okZJCYZRE/0wrhSyQ3U5PXom/PKbwNncziJsALvvnexsvgcXeKXtDIEfLjCi7PKEEpNSPuZRj71baK56GpSfWXqLVoHj2eEEhQl2mxtkHl5KyTTuasvMFmdhlQT/0i+/G/jnnCSgdKetAMXziqirTjPhtRh1mVyKSalqJl5k9CIWjAjb4XDzaaFo0V+AgfRot8cndjXb31HCbhX0rsNhKL8HiYknth6y+9GzbTAsVGiu0Qn6Yg5nZtVGbffh8m9/lN9dXhJJVKCWx4OSMoW0TzGChK5ATLQXbkQEx6ECoUK+0ieQ2gUd+i+5B8yAiN9dzQslkPGsef8zJkra7xkZsRJe9SfgJgaOx6agpY4baHG7DK/toLskh+yJfeyqgyOqpliHoYK0vkF/uUtlRTJQgc8a0V+5Qcn2BQSFnvXJPClCwQd5wJjCy1JftcqOeHnauJ62LlulFnVabohxrQbfWTeA/XHyTI9Afn+0YMPwX/C7j4C6RRnmsaUlhrqe6LXQ9O9+KOZ85cBharm0hvZahBmEE168eE6PXQuKeogTrBFshhBW5zerhWuVlKQXr/kyuVSWMVsHsfk+naLU3DBfp+jRXiA69dbror0VukuCr9YnRleBoQrmiubXoZg42Qm2Czti70jf/TxMwUKBDs6dKc8y+2N+q8/fZ2cfs7N0XK8Sp8cqJArNpfP4LJto27gQRAAA="
   },
   "Metadata": {
    "aws:cdk:path": "StackTrackerInfraStackV2/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "NewDatabaseEndpoint": {
   "Description": "New database endpoint",
   "Value": "stacktracker-migration-db.clcggkmq0zdo.us-west-2.rds.amazonaws.com",
   "Export": {
    "Name": "StackTrackerNewDatabaseEndpointV3"
   }
  },
  "MigrationNote": {
   "Description": "Migration instructions",
   "Value": "After verifying the new database is working, update the application to use the new endpoint and then delete the old database instance.",
   "Export": {
    "Name": "StackTrackerMigrationNoteV3"
   }
  },
  "TestInstanceId": {
   "Description": "ID of the temporary test instance",
   "Value": {
    "Ref": "DatabaseTestInstance7AABCDB5"
   },
   "Export": {
    "Name": "StackTrackerTestInstanceIdV3"
   }
  },
  "VpcId": {
   "Description": "VPC ID",
   "Value": {
    "Ref": "StackTrackerVPC312672F2"
   },
   "Export": {
    "Name": "StackTrackerVpcIdV3"
   }
  },
  "PrivateSubnetIds": {
   "Description": "Private Subnet IDs",
   "Value": {
    "Fn::Join": [
     "",
     [
      {
       "Ref": "StackTrackerVPCPrivateSubnet1Subnet0B7C8E72"
      },
      ",",
      {
       "Ref": "StackTrackerVPCPrivateSubnet2Subnet0741B41F"
      }
     ]
    ]
   },
   "Export": {
    "Name": "StackTrackerPrivateSubnetIdsV3"
   }
  },
  "PublicSubnetIds": {
   "Description": "Public Subnet IDs",
   "Value": {
    "Fn::Join": [
     "",
     [
      {
       "Ref": "StackTrackerVPCPublicSubnet1Subnet9BAD6C9F"
      },
      ",",
      {
       "Ref": "StackTrackerVPCPublicSubnet2SubnetDA60B8A7"
      }
     ]
    ]
   },
   "Export": {
    "Name": "StackTrackerPublicSubnetIdsV3"
   }
  },
  "DatabaseEndpoint": {
   "Description": "Database endpoint",
   "Value": "stacktracker-migration-db.clcggkmq0zdo.us-west-2.rds.amazonaws.com",
   "Export": {
    "Name": "StackTrackerDatabaseEndpointV3"
   }
  },
  "DatabasePort": {
   "Description": "Database port",
   "Value": "5432",
   "Export": {
    "Name": "StackTrackerDatabasePortV3"
   }
  },
  "DatabaseSecretArn": {
   "Description": "Database secret ARN",
   "Value": "arn:aws:secretsmanager:us-west-2:881490119784:secret:stacktracker/db-credentials-v3",
   "Export": {
    "Name": "StackTrackerDatabaseSecretArnV3"
   }
  },
  "UploadsBucketName": {
   "Description": "S3 bucket for uploads",
   "Value": {
    "Ref": "UploadsBucket5E5E9B64"
   },
   "Export": {
    "Name": "StackTrackerUploadsBucketNameV3"
   }
  },
  "UploadsBucketArn": {
   "Description": "S3 bucket ARN for uploads",
   "Value": {
    "Fn::GetAtt": [
     "UploadsBucket5E5E9B64",
     "Arn"
    ]
   },
   "Export": {
    "Name": "StackTrackerUploadsBucketArnV3"
   }
  },
  "DatabaseSubnetGroupName": {
   "Description": "Database subnet group name",
   "Value": "stacktracker-db-isolated-v3",
   "Export": {
    "Name": "StackTrackerDatabaseSubnetGroupNameV3"
   }
  },
  "ElasticBeanstalkEnvironmentUrl": {
   "Description": "Elastic Beanstalk Environment URL",
   "Value": {
    "Fn::Join": [
     "",
     [
      "http://",
      {
       "Fn::GetAtt": [
        "StackTrackerEnvironment",
        "EndpointURL"
       ]
      }
     ]
    ]
   },
   "Export": {
    "Name": "StackTrackerElasticBeanstalkUrlV3"
   }
  }
 },
 "Parameters": {
  "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61x8664C96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}