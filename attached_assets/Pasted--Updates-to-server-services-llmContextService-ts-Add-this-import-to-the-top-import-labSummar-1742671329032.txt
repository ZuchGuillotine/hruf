// Updates to server/services/llmContextService.ts

// Add this import to the top
import { labSummaryService } from './labSummaryService';

// In the constructUserContext function, add lab results context
// Add this code before creating the final messages array
export async function constructUserContext(userId: string, userQuery: string): Promise<{ messages: Message[] }> {
  try {
    // Existing code...
    
    // Get lab results summaries - add this before the final messages construction
    let labResultsContext = '';
    try {
      const relevantLabResults = await labSummaryService.findRelevantLabResults(userIdNum, userQuery, 3);
      
      if (relevantLabResults.length > 0) {
        labResultsContext = "User's Lab Test Results:\n";
        
        for (const lab of relevantLabResults) {
          const labDate = new Date(lab.uploadedAt).toLocaleDateString();
          labResultsContext += `[${labDate}] ${lab.fileName}: ${lab.metadata?.summary || "No summary available"}\n\n`;
        }
      }
    } catch (labError) {
      logger.warn(`Failed to fetch lab results for context: ${labError}`);
      // Continue without lab results
    }
    
    // Modify the messages to include lab results context
    const messages: Message[] = [
      { role: "system" as const, content: SYSTEM_PROMPT },
      { role: "user" as const, content: `
User Context - Health Statistics:
${healthStatsContext}

${directSupplementContext ? `Direct Supplement Information:\n${directSupplementContext}\n` : ''}

${labResultsContext ? `User Context - Lab Results:\n${labResultsContext}\n` : ''}

User Context - Recent Summaries (last 14 days):
${recentSummaryContent || 'No recent summaries available.'}

User Context - Historical Health Summaries:
${historicalSummaryContent || 'No historical summaries available.'}

User Context - Relevant Qualitative Observations:
${qualitativeLogContent || 'No relevant qualitative observations found.'}

User Context - Relevant Supplement Logs:
${quantitativeLogContent || supplementLogContent || 'No relevant supplement logs found.'}

User Query:
${userQuery}
` }
    ];
    
    // Existing code...
  } catch (error) {
    // Existing error handling...
  }
}