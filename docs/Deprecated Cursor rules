
# Assistant Rules for StackTracker Project

This document contains persistent instructions for collaborators to maintain feature continuity throughout the project.

## Database Schema Protection Rules

1. Database schema files (`neon-schema.ts`, `rds-schema.ts`) are critical infrastructure and require explicit user permission before any modifications:
   - Do NOT modify any schema files without direct user authorization
   - If schema changes seem necessary, MUST first ask user's permission
   - This applies to both structural changes and field additions/removals
   - Schema files affected by this rule:
     - `db/neon-schema.ts`
     - `db/rds-schema.ts`
     - Any new schema files added to the project

## Violation Prevention

- Before suggesting any schema changes, the assistant must:
  1. Explicitly ask for permission
  2. Explain the proposed changes
  3. Wait for user confirmation
  4. Document the approved changes in the changelog


General Recommendations for LLM Agents Using AWS CLI
Target AWS CLI v2: Ensure all scripts and internal logic are compatible with v2 syntax and default behaviors.

Strong Recommendation: Utilize AWS CLI Version 2 (v2).
AWS CLI v2 is the latest major version and is recommended for all new development and agent interactions. It includes features and changes based on community feedback and supports all the latest AWS service features. Agents should be built and tested against v2.

Key General v2 Changes Affecting Agents:

Binary Parameter Handling:

Default: v2 passes all binary input and output parameters as base64-encoded strings by default (e.g., for file uploads/downloads).

Impact: Agents handling binary data must ensure correct base64 encoding or explicitly use the --cli-binary-format raw-in-base64-out (or other relevant value) if v1-like behavior is strictly required, though adapting to v2 defaults is preferred.

URL Parameter Behavior:

Change: v2 no longer automatically performs a GET operation on http:// or https:// URLs provided as parameter values. The URL string itself is passed as the parameter.

Impact: If an agent needs to pass the content of a URL, it must first fetch the content (e.g., using curl or an HTTP library) and then pass it, typically using the file:// syntax for local file content.

Text File Encoding:

New Variable: The AWS_CLI_FILE_ENCODING environment variable allows explicit setting of text file encoding if it differs from the system locale.

Utilize help and --generate-cli-skeleton:

For discovering command parameters: aws <service> <command> help

For understanding JSON input structure: aws <service> <command> --generate-cli-skeleton input (or output for response structure).

Implement Robust Error Handling: Check exit codes and parse error messages. AWS CLI commands can fail for various reasons (permissions, invalid parameters, transient service issues).

Ensure Idempotency: Design operations to be safely repeatable where possible, especially for creation or update commands. Many AWS APIs support client request tokens for this.

Parameter Quoting and Escaping: Be meticulous with quoting and escaping special characters in parameter values, especially when constructing commands dynamically.

Region and Profile Management: Ensure the correct AWS region and profile are consistently used, either via environment variables (AWS_DEFAULT_REGION, AWS_PROFILE), CLI configuration, or explicit --region and --profile parameters.

Stay Updated: Periodically review the official AWS CLI Changelog and service-specific documentation for the latest updates, as the cloud landscape evolves rapidly.